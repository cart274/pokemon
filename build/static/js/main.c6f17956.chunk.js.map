{"version":3,"sources":["components/Loader/Loader.jsx","components/Loader/Loader.module.css","assets/images/loading.gif","components/ErrorBoundary/ErrorBoundary.module.css","state/types.js","containers/App/App.js","containers/Home/reducers.js","state/store.js","serviceWorker.js","components/ErrorBoundary/ErrorBoundary.jsx","utils/i18n.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Loader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Loader_module_css__WEBPACK_IMPORTED_MODULE_1___default","_assets_images_loading_gif__WEBPACK_IMPORTED_MODULE_2__","_assets_images_loading_gif__WEBPACK_IMPORTED_MODULE_2___default","react_redux__WEBPACK_IMPORTED_MODULE_3__","connect","state","loading","pokemons","_ref","t","a","createElement","className","style","loader","src","alt","module","exports","colors","lightGrey","show","p","black","cerulean","atlantis","white","grey","darkGrey","errorBoundary","d","__webpack_exports__","LOAD_POKEMONS_LOADING","LOAD_POKEMONS_SUCCESS","LOAD_POKEMONS_ERROR","LOAD_POKEMON_DETAIL_LOADING","LOAD_POKEMON_DETAIL_SUCCESS","LOAD_POKEMON_DETAIL_ERROR","Home","lazy","Promise","all","e","then","bind","App","props","react_default","react","fallback","Loader","initialState","data","dataDetail","error","combinedReducers","combineReducers","arguments","length","undefined","action","type","Object","objectSpread","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","console","log","href","children","React","Component","i18n","use","initReactI18next","init","resources","en","translation","Desarrollado por","Altura","Peso","Habilidad normal","Habilidad oculta","Cargando...","Cerrar","Anterior","Siguiente","","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","es","components_ErrorBoundary_ErrorBoundary","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6f17956.chunk.js","sourcesContent":["import React from 'react';\nimport style from './Loader.module.css'\nimport loader from \"../../assets/images/loading.gif\"\nimport { connect } from 'react-redux';\n\nconst Loader = ({loading, t}) => {\n    return(\n        loading &&\n        <div className={style.loader}>\n            <img src={loader} alt=\"Loader\"/>\n            <h4>{t('Cargando...')}</h4>\n        </div>\n    )\n}\nconst mapStateToProps = state => ({\n    loading: state.pokemons.loading,\n});\n\nexport default connect(mapStateToProps)(Loader);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../assets/styles/variables.css\\\"\",\"lightGrey\":\"#D3D3D3\",\"loader\":\"Loader_loader__3RN5h\",\"show\":\"Loader_show__3kde7\"};","module.exports = __webpack_public_path__ + \"static/media/loading.6e190eb7.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../assets/styles/variables.css\\\"\",\"black\":\"#000\",\"cerulean\":\"undefined\",\"atlantis\":\"undefined\",\"white\":\"#FFF\",\"grey\":\"undefined\",\"darkGrey\":\"#333\",\"lightGrey\":\"#D3D3D3\",\"errorBoundary\":\"ErrorBoundary_errorBoundary__3_ZEb\"};","export const LOAD_POKEMONS_LOADING = 'LOAD_POKEMONS_LOADING';\r\nexport const LOAD_POKEMONS_SUCCESS = 'LOAD_POKEMONS_SUCCESS';\r\nexport const LOAD_POKEMONS_ERROR = 'LOAD_POKEMONS_ERROR';\r\nexport const LOAD_POKEMON_DETAIL_LOADING = 'LOAD_POKEMON_DETAIL_LOADING';\r\nexport const LOAD_POKEMON_DETAIL_SUCCESS = 'LOAD_POKEMON_DETAIL_SUCCESS';\r\nexport const LOAD_POKEMON_DETAIL_ERROR = 'LOAD_POKEMON_DETAIL_ERROR';","import React, { lazy, Suspense  } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport '../../assets/styles/main.css'\nconst Home = lazy(() => import('../Home/Home'));\n\nconst App = (props) => {\n\n  return (\n    <Suspense fallback={<Loader/>}>\n      <Home/>\n    </Suspense>\n  );\n}\n\nexport default App;","import { LOAD_POKEMONS_LOADING, LOAD_POKEMONS_SUCCESS, LOAD_POKEMONS_ERROR,\n    LOAD_POKEMON_DETAIL_LOADING, LOAD_POKEMON_DETAIL_SUCCESS, LOAD_POKEMON_DETAIL_ERROR  } from '../../state/types'\n\nconst initialState = {\n  data: {},\n  dataDetail: {},\n  loading: false,\n  error: ''\n};\n\nexport default function reduxThunkReducer(state = initialState, action) {\n  switch (action.type) {\n      case LOAD_POKEMONS_LOADING: {\n          return {\n              ...state,\n              loading: true,\n              error:''\n          };\n      }\n      case LOAD_POKEMONS_SUCCESS: {\n          return {\n              ...state,\n              data: action.data,\n              loading: false\n          }\n      }\n      case LOAD_POKEMONS_ERROR: {\n          return {\n              ...state,\n              loading: false,\n              error: action.error\n          };\n      }\n      case LOAD_POKEMON_DETAIL_LOADING: {\n        return {\n            ...state,\n            loading: false,\n            error:''\n        };\n    }\n    case LOAD_POKEMON_DETAIL_SUCCESS: {\n        return {\n            ...state,\n            dataDetail: action.data,\n            loading: false\n        }\n    }\n    case LOAD_POKEMON_DETAIL_ERROR: {\n        return {\n            ...state,\n            loading: false,\n            error: action.error\n        };\n    }\n      default: {\n          return state;\n      }\n  }\n}\n","import { createStore, combineReducers, applyMiddleware  } from 'redux';\nimport pokemons  from '../containers/Home/reducers'\nimport thunk from 'redux-thunk'\nconst combinedReducers = combineReducers({\n    pokemons\n})\n\nconst store = createStore( combinedReducers, applyMiddleware(thunk))\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport style from \"./ErrorBoundary.module.css\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n          <section className={style.errorBoundary}>\n              <h5>Hubo un error en la aplicación</h5>\n              <a href={window.location.href}>Recargar</a>\n          </section>\n      );\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\ni18n\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: {\n          \"Desarrollado por\": \"Developed by\",\n          \"Altura\": \"Height\",\n          \"Peso\": \"Weight\",\n          \"Habilidad normal\": \"Normal ability\",\n          \"Habilidad oculta\": \"Hidden ability\",\n          \"Cargando...\": \"Loading...\",\n          \"Cerrar\": \"Close\",\n          \"Anterior\": \"Previous\",\n          \"Siguiente\": \"Next\",\n          \"\": \"\",\n        }\n      }\n    },\n    lng: \"es\",\n    fallbackLng: \"es\",\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\nexport default i18n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\nimport { Provider } from 'react-redux';\nimport store from \"./state/store\"\nimport * as serviceWorker from './serviceWorker';\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\nimport i18n from './utils/i18n'\n\nReactDOM.render(<Provider store={store}>\n                    <ErrorBoundary>\n                        <App />\n                    </ErrorBoundary>\n                </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}